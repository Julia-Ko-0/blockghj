// SPDX-License-Identifier: MIT
pragma solidity >=0.7.0;
contract sale{
    struct House{
        address owner;
        uint square;
        uint year;
        bool sell;
        uint price;
    }
    House[] public  appHouse;
    address admin ;
    function addHouse(uint _square,uint _year) public {
        appHouse.push(House(msg.sender,_square,_year,false,0));
    }
    // выставляем на продажу задаем индекс дома и цену
    function canselSele(uint _house,uint _price) public {
        require(msg.sender == appHouse[_house].owner,"not owner");
        appHouse[_house].price = _price;
        appHouse[_house].sell = true;
    }
    // покупка задаем индекс, отправляем денги , меняем статус продажи
    function payHouse(uint _house)public payable{
        require(appHouse[_house].sell == true && msg.value == appHouse[_house].price,"house not sell /not sell");
            payable(appHouse[_house].owner).transfer(appHouse[_house].price);
            appHouse[_house].owner = msg.sender;
            appHouse[_house].sell = false;
            appHouse[_house].price = 0;
        
  
    }
}
//////////////////////////////
// SPDX-License-Identifier: MIT
pragma solidity >=0.7.0;
contract sale{
    struct House{
        address owner;
        uint square;
        uint year;
       
    }
    struct SellHouse{
        address owner;
        bool sell;
        uint price;
        address buyer;
    }

    House[] public  appHouse;
    SellHouse[] public putOnSellHouse;
    address admin = 0x5B38Da6a701c568545dCfcB03FcB875f56beddC4;
    address buyer = address(0);
    constructor(){
        appHouse.push(House(0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2,50,5));
    }
    function addHouse(address _owner,uint _square, string memory _info, uint _year) public {
        require(msg.sender == admin);
        appHouse.push(House(_owner,_square,_year,buyer));
    }
    // выставляем на продажу задаем индекс дома и цену
    function putOnSele(uint _house,uint _price) public {
        require(msg.sender == appHouse[_house].owner,"not owner");
        putOnSellHouse.push(SellHouse(_house,true,_price));
    }
    //запрос на покупку
    function payHouse(uint _house)public payable{
        require(putOnSellHouse[_house].sell == true && msg.value == appHouse[_house].price,"house not sell /not sell");
            buyer = msg.sender;
            putOnSellHouse[_house].sell == false;
           
    }
    // одобрание покупки
    function approved(uint _house)public payable{
        require(putOnSellHouse[_house].sell == true,"house not sell /not sell");
        payable(appHouse[_house].owner).transfer(appHouse[_house].price);
        appHouse[_house].owner = buyer;
        
    }
    function rejected(uint _house){

    }

}
/////////////////////////////////////////////////
// SPDX-License-Identifier: MIT
pragma solidity >=0.7.0;
contract sale{
    struct House{
        address owner;
        uint square;
        uint year;
       
    }
    struct SellHouse{
        address owner;
        bool sell;
        uint price;
    }
    bool statusOfPayed = false;
    House[] public  appHouse;
    SellHouse[] public putOnSellHouse;
    address admin = 0x5B38Da6a701c568545dCfcB03FcB875f56beddC4;
    address buyer = address(0);
    constructor(){
        appHouse.push(House(0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2,50,5));
    }
    function addHouse(address _owner,uint _square,uint _year) public {
        require(msg.sender == admin);
        appHouse.push(House(_owner,_square,_year));
    }
    // выставляем на продажу задаем индекс дома и цену
    function putOnSele(uint _house,uint _price)public {
        require(msg.sender == appHouse[_house].owner,"not owner");
        putOnSellHouse.push(SellHouse(msg.sender,true,_price));
        buyer == msg.sender;
    }
    // отмена покупки
       function cancelSale (uint _house) public {
        require(msg.sender == appHouse[_house].owner,"You are not the owner");
        putOnSellHouse[_house].sell = false;
    }
    // запрос на погкупку дома
    function payHouse(uint _index)public payable{
        if (putOnSellHouse[_index].sell == true){
            require(msg.value == putOnSellHouse[_index].price);
            buyer = msg.sender;
            statusOfPayed = true;
        }
         else {
        payable(msg.sender).transfer(msg.value);
        revert('');
        }
    
    }
    // одобрание покупки
    function confirmation(uint _house)public payable{
        require(msg.sender == appHouse[_house].owner,"not owner");
        require(statusOfPayed == false, "money not received");
        payable(msg.sender).transfer(putOnSellHouse[_house].price);
        appHouse[_house].owner = buyer;
        putOnSellHouse[]
        
    }
   
   

}
